name: Build and Release OnePlus Kernels

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: true
      set_prerelease:
        description: 'Set release as prerelease?'
        required: true
        type: boolean
        default: false

jobs:
  build-batch-1:
    strategy:
      fail-fast: false
      matrix:
        include:
          - model: OP11
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_11_v.xml
            android_version: android13
            kernel_version: "5.15"
#          - model: OP11r
#            soc: waipio
#            branch: oneplus/sm8475
#            manifest: oneplus_11r_v.xml
#            android_version: android12
#            kernel_version: "5.10"
#          - model: OP12r
#            soc: kalama
#            branch: oneplus/sm8550
#            manifest: oneplus_12r_v.xml
#            android_version: android13
#            kernel_version: "5.15"
#          - model: OP-OPEN
#            soc: kalama
#            branch: oneplus/sm8550
#            manifest: oneplus_open_v.xml
#            android_version: android13
#            kernel_version: "5.15"
#          - model: OP-ACE-2
#            soc: waipio
#            branch: oneplus/sm8475
#            manifest: oneplus_ace2_v.xml
#            android_version: android12
#            kernel_version: "5.10"
#          - model: OP10t
#            soc: waipio
#            branch: oneplus/sm8475
#            manifest: oneplus_10t_v.xml
#            android_version: android12
#            kernel_version: "5.10"
#          - model: OP10pro
#            soc: waipio
#            branch: oneplus/sm8450
#            manifest: oneplus_10_pro_v.xml
#            android_version: android12
#            kernel_version: "5.10"
#          - model: OP-ACE-2-PRO
#            soc: kalama
#            branch: oneplus/sm8550
#            manifest: oneplus_ace2pro_v.xml
#            android_version: android13
#            kernel_version: "5.15"
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      model: ${{ matrix.model }}
      soc: ${{ matrix.soc }}
      branch: ${{ matrix.branch }}
      manifest: ${{ matrix.manifest }}
      android_version: ${{ matrix.android_version }}
      kernel_version: ${{ matrix.kernel_version }}

  build-batch-2:
    # needs: build-batch-1
    strategy:
      fail-fast: false
      matrix:
        include:
          - model: OP13
            soc: sun
            branch: oneplus/sm8750
            manifest: oneplus_13.xml
            android_version: android15
            kernel_version: "6.6"
#          - model: OPAce5Pro
#            soc: sun
#            branch: oneplus/sm8750
#            manifest: oneplus_ace5_pro.xml
#            android_version: android15
#            kernel_version: "6.6"
#          - model: OP12
#            soc: pineapple
#            branch: oneplus/sm8650
#            manifest: oneplus12_v.xml
#            android_version: android14
#            kernel_version: "6.1"
          - model: OP13r
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus_13r.xml
            android_version: android14
            kernel_version: "6.1"
#          - model: OP-ACE-5
#            soc: pineapple
#            branch: oneplus/sm8650
#            manifest: oneplus_ace5.xml
#            android_version: android14
#            kernel_version: "6.1"
#          - model: OPNORD4
#            soc: pineapple
#            branch: oneplus/sm7675
#            manifest: oneplus_nord_4_v.xml
#            android_version: android14
#            kernel_version: "6.1"
#          - model: OPNORDCE4
#            soc: crow
#            branch: oneplus/sm7550
#            manifest: oneplus_nord_ce4_v.xml
#            android_version: android14
#            kernel_version: "5.15"
#          - model: OP-PAD-2
#            soc: pineapple
#            branch: oneplus/sm8650
#            manifest: oneplus_pad2_v.xml
#            android_version: android14
#            kernel_version: "6.1"
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      model: ${{ matrix.model }}
      soc: ${{ matrix.soc }}
      branch: ${{ matrix.branch }}
      manifest: ${{ matrix.manifest }}
      android_version: ${{ matrix.android_version }}
      kernel_version: ${{ matrix.kernel_version }}

  trigger-release:
    needs:
      - build-batch-1
      - build-batch-2
    runs-on: [self-hosted, ubuntu-24.04]
    if: ${{ inputs.make_release }}
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      RELEASE_NAME: "OnePlus Kernels With KernelSU-Next & SUSFS"
      RELEASE_NOTES: |        

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Generate and Create New Tag
        run: |
          set -x
          TAG_PREFIX="${TAG_PREFIX%/}"
          LATEST_NUM=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags \
            --jq "[.[].name | select(test(\"^${TAG_PREFIX}[0-9]+$\")) | sub(\"${TAG_PREFIX}\"; \"\") | tonumber] | max" \
            || echo "0")

          echo "Latest numeric suffix for $TAG_PREFIX*: $LATEST_NUM"

          NEXT_NUM=$((LATEST_NUM + 1))
          NEW_TAG="${TAG_PREFIX}${NEXT_NUM}"

          while gh api repos/$REPO_OWNER/$REPO_NAME/git/refs/tags | grep -q "\"ref\": \"refs/tags/$NEW_TAG\""; do
            NEXT_NUM=$((NEXT_NUM + 1))
            NEW_TAG="${TAG_PREFIX}${NEXT_NUM}"
          done

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "üîπGenerated unique tag: $NEW_TAG"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if git status --porcelain | grep -qE '\.github/workflows/'; then
            echo "‚ö†Ô∏è Workflow files modified, creating empty commit..."
            git commit --allow-empty -m "Empty commit to avoid workflow permission issue"
            git push
          else
            echo "‚úÖ No workflow changes detected."
          fi

          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"
        env:
          TAG_PREFIX: op-kernel-n
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Create GitHub Release with Retry
        run: |
          set -x
          ATTEMPTS=0
          MAX_ATTEMPTS=3
          DELAY_SECONDS=10

          # flag prerelease
          if [ "${{ inputs.set_prerelease }}" = "true" ] || [ "${{ inputs.set_prerelease }}" = true ]; then
            PRERELEASE_FLAG="--prerelease"
          else
            PRERELEASE_FLAG=""
          fi

          while true; do
            set +e
            echo "Attempt $((ATTEMPTS+1)) to create GitHub Release..."
            gh release create "${{ env.NEW_TAG }}" --title "${{ env.RELEASE_NAME }}" --notes "${{ env.RELEASE_NOTES }}" $PRERELEASE_FLAG
            EXIT_CODE=$?
            set -e

            if [ $EXIT_CODE -eq 0 ]; then
              echo "‚úÖ GitHub Release created successfully!"
              break
            fi

            ATTEMPTS=$((ATTEMPTS+1))
            if [ $ATTEMPTS -ge $MAX_ATTEMPTS ]; then
              echo "‚ùå Failed to create GitHub Release after $MAX_ATTEMPTS attempts."
              exit 1
            fi

            echo "‚ö†Ô∏è GitHub Release creation failed (attempt $ATTEMPTS). Retrying in $DELAY_SECONDS seconds..."
            sleep $DELAY_SECONDS
          done
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
          RELEASE_NOTES: ${{ env.RELEASE_NOTES }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Upload Release Assets Dynamically
        run: |
          set -x
          for file in ./downloaded-artifacts/kernel-*/*; do
              if [ -d "$file" ]; then
                  continue
              fi
              echo "Uploading $file..."
              gh release upload ${{ env.NEW_TAG }} "$file"
          done
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Display Files Uploaded
        run: |
          set -x
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
